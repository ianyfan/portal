#!/usr/bin/env bash

stty -echo
tput civis

trap "stty echo; tput cnorm" EXIT

temp_file=$(mktemp)

printf '\e[8;38;112t\[\033[48;5;0;38;5;178m\]'

clear

cat <<EOF
 -----------------------------------------------------  ------------------------------------------------------
|                                                     ||                                                      |
|                                                     ||                                                      |
|                                                     ||                                                      |
|                                                     ||                                                      |
|                                                     ||                                                      |
|                                                     ||                                                      |
|                                                     ||                                                      |
|                                                     ||                                                      |
|                                                     ||                                                      |
|                                                     ||                                                      |
|                                                     ||                                                      |
|                                                     ||                                                      |
|                                                     ||                                                      |
|                                                     ||                                                      |
|                                                     ||                                                      |
|                                                     ||                                                      |
|                                                     | ------------------------------------------------------
|                                                     |
|                                                     |
|                                                     |
|                                                     |
|                                                     |
|                                                     |
|                                                     |
|                                                     |
|                                                     |
|                                                     |
|                                                     |
|                                                     |
|                                                     |
|                                                     |
|                                                     |
|                                                     |
|                                                     |
 ----------------------------------------------------- 
EOF

print_cursors() {
    source $temp_file
    printf "\033[%s;%sH${cursor_status:0:1}" ${cursor_pos_lyrics[@]}
    printf '\033[17;'$cursor_pos_credits"H${cursor_status:1:1}"
}

cat >$temp_file << EOF
cursor_status=' _'
cursor_pos_lyrics=(3 3)
cursor_pos_credits=58
EOF
source $temp_file

while true; do
    sed -i "1s/'.*'/'${cursor_status:1:1}${cursor_status:0:1}'/" $temp_file
    print_cursors
    sleep .32
done &

print_ascii_art() {
    local line_no=19
    local IFS=''
    while read -r line; do
        printf "\033[%s;64H%s" $(( line_no++ )) $line
    done
}

print_aperture_logo() {
    print_ascii_art <<EOF
             .,-:;//;:=,
          . :H@@@MM@M#H/.,+%;,
       ,/X+ +M@@M@MM%=,-%HMMM@X/,
     -+@MM; \$M@@MH+-,;XMMMM@MMMM@+-
    ;@M@@M- XM@X;. -+XXXXXHHH@M@M#@/.
  ,%MM@@MH ,@%=            .---=-=:=,.
  =@#@@@MX .,              -%HX\$$%%%+;
 =-./@M@M$                  .;@MMMM@MM:
 X@/ -\$MM/                    .+MM@@@M$
,@M@H: :@:                    . =X#@@@@-
,@@@MMX, .                    /H- ;@M@M=
.H@@@@M@+,                    %MM+..%#\$.
 /MMMM@MMH/.                  XM@MH; =;
  /%+%\$XHH@$=              , .H@@@@MX,
   .=--------.           -%H.,@@@@@MX,
   .%MM@@@HHHXX\$\$$%+- .:\$MMX =M@@MM%.
     =XMMM@MM@MM#H;,-+HMM@M+ /MMMX=
       =%@M@M#@\$-.=\$@MM@@@M; %M%=
         ,:+$+-,/H#MMMMMMM@= =,
               =++%%+/:-.
EOF
}

print_lyrics() {
    local processing_arg=false
    local new_line=true
    local args=(.088 0)
    local arg=
    for line in "${@}"; do
        if [ "$processing_arg" = true ]; then
            args[arg]=$line
            processing_arg=false
            continue
        elif [[ $line == -* ]]; then
            processing_arg=true
            case ${line:1:1} in
                r ) arg=0 ;;
                d ) arg=1 ;;
                n )
                    processing_arg=false
                    new_line=false
                ;; c)
                    processing_arg=false
                    cursor_pos_lyrics=(3 3)
                    sed -i "2s/(.*)/(3 3)/" $temp_file
                    for i in {3..35}; do
                        printf "\033[$i;3H"
                        printf " %.0s" {0..51}
                    done
            esac
            continue
        fi

        sleep ${args[1]}

        local cursor_pos_start=${cursor_pos_lyrics[1]}
        for (( char=0; char<${#line}; char++ )); do
            (( cursor_pos_lyrics[1]++ ))
            sed -i "2s/[0-9]*)/${cursor_pos_lyrics[1]})/" $temp_file
            printf "\033[${cursor_pos_lyrics[0]};%sH${line:$char:1}" \
                $(( ${cursor_pos_lyrics[1]}-1 ))
            print_cursors
            sleep ${args[0]}
        done
        (( cursor_pos_lyrics[1]=cursor_pos_start+${#line} ))
        sed -i "2s/[0-9]*)/$(( cursor_pos_start+${#line} )))/" $temp_file
        printf "\033[${cursor_pos_lyrics[0]};%sH$line" $cursor_pos_start

        args[0]=.088

        if [ "$new_line" = true ]; then
            last_char=${cursor_pos_lyrics[@]}
            sed -i "2s/(.*)/($(( cursor_pos_lyrics[0]+1 )) 3)/" $temp_file
            printf "\033[%s;%sH " ${last_char[@]}
            print_cursors
        else
            new_line=true
        fi
    done

    if [ "${@: -2:1}" = -d ]; then
        sleep ${args[1]}
    fi
}

sleep .1
print_lyrics -r .08 'Form FORM-29827281-12:' -r .08 'Test Assessment Report' \
    '' '' -d 2.9

aplay -q still_alive.wav &

print_lyrics 'This was a triumph.' -d .12

credits=('>LIST PERSONNEL' '' '' 'Gautam Babbar' 'Ted Backman' 'Kelly Bailey'
    'Jeff Ballinger' 'Aaron Barber' 'Jeep Barnett' 'Jeremy Bennett'
    'Dan Berger' 'Yahm Bernier' 'Ken Birdwell' 'Derrick Birum' 'Mike Blaszczak'
    'Iestyn Bleasdale-Shepherd' 'Chris Bokitch' 'Steve Bond' 'Matt Boone'
    'Antoine Bourdon' 'Jamaal Bradley' 'Jason Brashill' 'Charlie Brown'
    'Charlie Burgin' 'Andrew Burke' 'Augusta Butlin' 'Julie Caldwell'
    'Dario Casali' 'Chris Chin' 'Jess Cliffe' 'Phil Co' 'John Cook'
    'Christen Coomer' 'Greg Coomer' 'Scott Dalton' 'Kerry Davis'
    'Jason Deakins' 'Joe Demers' 'Ariel Diaz' 'Quintin Doroquez' 'Jim Dose'
    'Chris Douglass' 'Laura Dubuk' 'Mike Dunkle' 'Mike Durand' 'Mike Dussault'
    'Dhabih Eng' 'Katie Engel' 'Chet Faliszek' 'Adrian Finol' 'Bill Fletcher'
    'Moby Francke' 'Stephane Gaudette' 'Kathy Gehrig' 'Vitaliy Genkin'
    'Paul Graham' 'Chris Green' 'Chris Grinstead' 'John Guthrie'
    'Aaron Halifax' 'Reagan Halifax' 'Leslie Hall' 'Jeff Hameluck' 'Joe Han'
    'Don Holden' 'Jason Holtman' 'Gray Horsfield' 'Keith Huggins' 'Jim Hughes'
    'Jon Huisingh' 'Brian Jacobson' 'Lars Jensvold' 'Erik Johnson'
    'Jakob Jungels' 'Rich Kaethler' 'Steve Kalning' 'Aaron Kearly'
    'Iikka Keranen' 'David Kircher' 'Eric Kirchmer' 'Scott Klintworth'
    'Alden Kroll' 'Marc Laidlaw' 'Jeff Lane' 'Tim Larkin' 'Dan LeFree'
    'Isabelle LeMay' 'Tom Leonard' 'Jeff Lind' 'Doug Lombardi' 'Bianca Loomis'
    'Richard Lord' 'Realm Lovejoy' 'Randy Lundeen' 'Scott Lynch' 'Ido Magal'
    'Nick Maggiore' 'John McCaskey' 'Patrick McClard' 'Steve McClure'
    'Hamish McKenzie' 'Gary McTaggart' 'Jason Mitchell' 'Mike Morasky'
    'John Morello II' 'Bryn Moslow' 'Arsenio Navarro' 'Gabe Newell'
    'Milton Ngan' 'Jake Nicholson' 'Martin Otten' 'Nick Papineau' 'Karen Prell'
    'Bay Raitt' 'Tristan Reidford' 'Alfred Reynolds' 'Matt Rhoten'
    'Garret Rickey' 'Dave Riller' 'Elan Ruskin' 'Matthew Russell'
    'Jason Ruymen' 'David Sawyer' 'Marc Scaparro' 'Wade Schin' 'Matthew Scott'
    'Aaron Seeler' 'Jennifer Seeley' 'Taylor Sherman' 'Eric Smith'
    'Jeff Sorensen' 'David Speyrer' 'Jay Stelly' 'Jeremy Stone' 'Eric Strand'
    'Kim Swift' 'Kelly Thornton' 'Eric Twelker' 'Carl Uhlman' 'Doug Valente'
    'Bill Van Buren' 'Gabe Van Engel' 'Alex Vlachos' 'Robin Walker'
    'Joshua Weier' 'Andrea Wicklund' 'Greg Winkler' 'Erik Wolpaw' 'Doug Wood'
    'Matt T. Wood' 'Danika Wright' 'Matt Wright' 'Shawn Zabecki'
    'Torsten Zabka' '' '' '' '' "'Still Alive' 'by:" 'Jonathan Coulton' '' '' ''
    'Voices:' 'Ellen McLain - GlaDOS, Turrets' 'Mike Patton - THE ANGER SPHERE'
    '' '' '' 'Voice Casting:' 'Shana Landsburg\Teri Fiddleman' '' '' '' ''
    'Voice Recording:' 'Pure Audio, Seattle, WA' '' '' '' '' 'Voice recording'
    'scheduling and logistics:' 'Pat Cockburn, Pure Audio' '' '' '' ''
    'Translations:' 'SDL' '' '' '' '' 'Crack Legal Team:' 'Liam Lavery'
    'Karl Quackenbush' 'Kristen Boraas' 'Kevin Rosenfield' 'Alan Bruggeman'
    'Dennis Tessier' '' '' '' 'Thanks for the use of their face:'
    'Alesia Glidewell - Chell' '' '' '' 'Special thanks to everyone at:'
    'Alienware' 'ATI' 'Dell' 'Falcon Northwest' 'Havok' 'SOFTIMAGE'
    'and Don Kemmis, SLK Technologies' '' '' '' '' '' '' '' '' ''
    'THANK YOU FOR PARTICIPATING' 'IN THIS' 'ENRICHMENT CENTER ACTIVITY!!'
    '' '' '' '' '' ''
)
for ((  line_no=0; line_no<${#credits[@]}; line_no++ )); do
    line=${credits[$line_no]}
    for (( char=0; char<${#line}; char++ )); do
        (( cursor_pos_credits++ ))
        sed -i "3s/[0-9]*$/$cursor_pos_credits/" $temp_file
        printf "\033[17;%sH${line:$char:1}" $(( cursor_pos_credits-1 ))
        print_cursors
        sleep .06
    done
    sed -i "3s/[0-9]*$/58/" $temp_file
    for (( l=line_no; l>line_no-15 && l>=0; l-- )); do
        line=${credits[$l]}
        printf "\033[%s;58H$line" $(( 16+$l-$line_no ))
        printf " %.0s" $(seq ${#line} 52)
    done
    printf "\033[17;58H"
    printf " %.0s" {0..52}
    print_cursors

    sleep .088
done &

# -r rate -d delay -n no newline

print_lyrics -d 2 "I'm making a note here:" -d .1 -r .13 'HUGE SUCCESS.' \
    -d 1.2 -r 0.09 "It's hard to overstate" -d .3 -r .16 'my satisfaction.' \
    -d 2.2

print_aperture_logo

print_lyrics 'Aperture Science' -d 2.2 'We do what we must' -d .3 -n \
    'because ' -d .2 'we can.' -d 1.7 -r .12 'For the good of all of us' \
    -d .3 -r .058 'except the ones who are dead.' '' -d .4 -r 0.07 \
    "But there's no sense crying" -d 0 'over every mistake.' -d .2 \
    'You just keep on trying' -d 0 -r .068 'till you run out of cake.' -d .2 \
    -r .075 'And the science gets done.' -d 0 'And you make a neat gun.' \
    -r .066 'For the people who are' -d .1 'still alive.' -d 1.5 -c

wait
